import discord
from discord.ext import commands
import re
import requests
import urllib
import json
import datetime
import asyncio
__skinopts__ = "&width=600&height=300&scale=4&overlay=true&theta=30"
__skinopts__ += "&phi=20&time=90&shadow_color=000&shadow_radius=0"
__skinopts__ += "&shadow_x=0&shadow_y=0&front_and_back=true"


class utils(commands.Cog):
	def __init__(self, bot):
		self.bot = bot

	@commands.command()
	async def avatar(self, ctx, member: discord.Member=None):
		if member == None:
			member = ctx.author
		e = discord.Embed(title=f"–ê–≤–∞—Ç–∞—Ä {member}")
		e.set_image(url=member.avatar_url)
		await ctx.send(embed=e)

	@commands.command()
	async def say(self, ctx, *, text):
		if re.search(".*@.*", str(text)):
			if not ctx.author.guild_permissions.mention_everyone:
				await error(ctx, '–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ.')
				return
		await ctx.send(text)

	@commands.command()
	async def embed(self, ctx, *, text):
		e = discord.Embed(description=text)
		await ctx.send(embed=e)

	@commands.command(aliases=['youtube', 'video'])
	async def yt(self, ctx, *, query):
		e = discord.Embed(description=f'–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ–∏—Å–∫ –Ω–∞ YouTube:'
									  f'\n```{query}```')
		lastmsg = await ctx.send(embed=e)
		query = urllib.parse.urlencode({'search_query': query})
		async with ctx.typing():
			page = urllib.request.urlopen('http://www.youtube.com/results?' + query)
			results = re.findall(r'/watch\?v=(.{11})', page.read().decode())
		try:
			await ctx.send(f'''
`1.` https://youtu.be/{results[0]}
`2.` https://youtu.be/{results[1]}
`3.` https://youtu.be/{results[2]}''')
			await lastmsg.delete()
		except:
			await lastmsg.delete()
			await error(ctx, '–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.')

	@commands.command(aliases=['mcserver'])
	async def ping(self, ctx, ip):
		def check(reaction, user):
			if reaction.message.id == lastmsg.id and reaction.emoji == 'üìå':
				return True
			else:
				return False
		async with ctx.typing():
			e = get_status(ip)
		lastmsg = await ctx.send(embed=e)
		await lastmsg.add_reaction('üìå')
		try:
			await asyncio.sleep(1)
			reaction = await self.bot.wait_for('reaction_add', timeout=30, check=check)
		except asyncio.TimeoutError:
			await lastmsg.remove_reaction('üìå', self.bot.user)
			return
		await success(ctx, f'–ö–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è.'
						   f'\n–ß—Ç–æ–±—ã –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å —ç—Ç–æ—Ç –ø—Ä–æ—Ü–µ—Å—Å, —É–¥–∞–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.', 5)
		while True:
			e = get_status(ip)
			await asyncio.sleep(300)
			try:
				await lastmsg.edit(embed=e)
			except:
				break

	@commands.command(aliases = ['2b2t', '2b'])
	async def _2b2t(self, ctx):
		e = discord.Embed(description='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...')
		msg = await ctx.send(embed=e)
		queue = requests.get('https://www.2b2t.io/api/queue?last=true')
		queue = int(queue.text.split(',')[1].replace(']',''))
		prio = requests.get('https://api.2b2t.dev/prioq')
		prio = int(prio.text.split(',')[1].replace(',null]',''))
		url = f'https://mc.api.srvcontrol.xyz/server/status?ip=2b2t.org'
		data = requests.get(url).text
		status = json.loads(data)
		await msg.delete()
		if not status['online'] or status['error']:
			await msg.delete()
			await error(ctx, '–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º.')
			return
		online = status['players']['now']
		ingame = online - int(queue)
		info = f'''–í –æ—á–µ—Ä–µ–¥–∏: {queue}.
				   –í –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ–π –æ—á–µ—Ä–µ–¥–∏: {prio}.
				   –ù–∞ —Å–µ—Ä–≤–µ—Ä–µ: {ingame}.
				   –û–±—â–∏–π –æ–Ω–ª–∞–π–Ω: {online}.'''
		e = discord.Embed(title='2b2t', description=info)
		e.set_thumbnail(url=f'https://eu.mc-api.net/v3/server/favicon/2b2t.org')
		await ctx.send(embed=e)

	@commands.command()
	async def skin(self, ctx, nick):
		if len(re.findall("[^A-Za-z0-9_]", nick)):
			await error(ctx, '–ó–∞–¥–∞–Ω–Ω—ã–π –Ω–∏–∫–Ω–µ–π–º —Å–¥–µ—Ä–∂–∏—Ç –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã.')
			return
		url = f"https://ru.namemc.com/profile/{nick}.1"
		async with ctx.typing():
			guild = discord.utils.get(self.bot.guilds, id=832662675963510824)
			channel = discord.utils.get(guild.channels, id=859408699985887244)
			await channel.send(url)
			await asyncio.sleep(1)
			message = await channel.send(url)
		if "–ü–æ–∏—Å–∫" in message.embeds[0].title:
			await error(ctx, '–õ–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ —Å —Ç–∞–∫–∏–º –Ω–∏–∫–æ–º –Ω–µ—Ç.')
			return
		skin = message.embeds[0].thumbnail.url
		name = message.embeds[0].title.split(' | –£—á—ë—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å Minecraft')[0]
		skin = skin.split("&width=")[0] + __skinopts__
		e = discord.Embed(title=f"–°–∫–∏–Ω {name}")
		e.set_image(url=skin)
		await ctx.send(embed=e)

	@commands.command(aliases=['guild', 'serverinfo'])
	async def server(self, ctx):
		async with ctx.typing():
			guild = ctx.guild
			name = guild.name
			icon = guild.icon_url
			created = str(guild.created_at).split('.')[0].replace('-', '.')
			owner = self.bot.get_user(guild.owner_id)
			members = guild.member_count
			categories = len(guild.categories)
			tchannels = len(guild.text_channels)
			vchannels = len(guild.voice_channels)
			roles = len(guild.roles)
			blevel = guild.premium_tier
			bcount = guild.premium_subscription_count
			region = str(guild.region).upper()
		e = discord.Embed()
		info = f"""```
ID —Å–µ—Ä–≤–µ—Ä–∞:			 {guild.id}
–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:		  {created}
–í–ª–∞–¥–µ–ª–µ—Ü:			   {owner}
–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤:			 {members}
–ö–∞—Ç–µ–≥–æ—Ä–∏–π:			  {categories}
–¢–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤:	  {tchannels}
–ì–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤:	  {vchannels}
–†–æ–ª–µ–π:				  {roles}
–£—Ä–æ–≤–µ–Ω—å –±—É—Å—Ç–∞:		  {blevel}
–ë—É—Å—Ç–æ–≤:				 {bcount}
–†–µ–≥–∏–æ–Ω:				 {region}
```"""
		e.add_field(name=name, value=info)
		e.set_thumbnail(url=icon)
		await ctx.send(embed=e)

	@commands.command(aliases=['userinfo'])
	async def user(self, ctx, user: discord.Member=None):
		if not user:
			user = ctx.author
		status = str(user.status)
		if status == 'dnd':
			status = '–ù–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å'
		if status == 'idle':
			status = '–ù–µ –∞–∫—Ç–∏–≤–µ–Ω'
		if status == 'online':
			status = '–í —Å–µ—Ç–∏'
		if status == 'offline':
			status = '–ù–µ –≤ —Å–µ—Ç–∏'
		activity = user.activity
		info = f"""```
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:		{str(user).replace("`", "")}
ID:				  {user.id}
–°—Ç–∞—Ç—É—Å:			  {status}
–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:		  {activity if activity else '–ù–µ—Ç'}
–ë–æ—Ç:				 {"–î–∞" if user.bot else "–ù–µ—Ç"}
–†–æ–ª—å:				{str(user.top_role).replace("`", "")}
–†–æ–ª–µ–π:			   {len(user.roles)-1}
–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:	 {user.created_at.strftime("%d.%m.%Y %H:%M:%S")}
–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è:	   {user.joined_at.strftime("%d.%m.%Y %H:%M:%S")}
```"""
		e = discord.Embed(title=user, description=info)
		e.set_thumbnail(url=user.avatar_url)
		await ctx.send(embed=e)

	@commands.command()
	async def timer(self, ctx, time):
		try:
			_time = time
			time = cts(time)
		except Exception as e:
			print(e)
			await error(ctx, f'–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏.'
							 f'\n–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: `!!timer 5m`')
			return
		if time <= 0:
			await error(ctx, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏.')
			return
		if time > 60:
			await error(ctx, '–ù–µ–ª—å–∑—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–∞–π–º–µ—Ä –±–æ–ª—å—à–µ —á–µ–º –Ω–∞ 60 –º–∏–Ω—É—Ç.')
			return
		_time = ctts(_time)
		e = discord.Embed(description=f'<a:success:860037468279406592> –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ç–∞–π–º–µ—Ä –Ω–∞ {_time}.')
		await ctx.send(embed=e)
		await asyncio.sleep(time)
		msg = await ctx.send(ctx.author.mention)
		await msg.delete()
		await success(ctx, f'–¢–∞–π–º–µ—Ä —Å—Ä–∞–±–æ—Ç–∞–ª, –ø—Ä–æ—à–ª–æ {_time}.')


def setup(bot):
	bot.add_cog(utils(bot))


async def success(ctx, message, delete_after=None, image=None):
	e = discord.Embed(description='<a:success:860037468279406592> ' + message)
	if image:
		e.set_thumbnail(url=image)
	await ctx.send(embed=e, delete_after=delete_after)


async def error(ctx, message):
	e = discord.Embed(description='<a:error:862306041546407936> ' + message)
	await ctx.send(embed=e)


def get_status(ip):
	url = f'https://mc.api.srvcontrol.xyz/server/status?ip={ip}'
	data = requests.get(url).text
	status = json.loads(data)
	if status['online'] and not status['error']:
		online = status['players']['now']
		max = status['players']['max']
		status['players']['now']
		core = status['server']['name']
		motd = status['motd']
		color_codes = ['¬ß1', '¬ß2', '¬ß3', '¬ß4', '¬ß5', '¬ß6', '¬ß7', '¬ß8',
					   '¬ß9', '¬ß0', '¬ßa', '¬ßb', '¬ßc', '¬ßd', '¬ße', '¬ßf',
					   '¬ßm', '¬ßn', '¬ßl', '¬ßk', '¬ßr', '¬ßo']
		for i in color_codes:
			motd = motd.replace(i, '')
			core = core.replace(i, '')
		e = discord.Embed(title=f'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ {ip}', description=f'```{motd}```')
		e.add_field(name='–ò–≥—Ä–æ–∫–æ–≤ –æ–Ω–ª–∞–π–Ω', value=f'{online}/{max}', inline=True)
		e.add_field(name='–Ø–¥—Ä–æ', value=core, inline=True)
		e.set_thumbnail(url=f'https://eu.mc-api.net/v3/server/favicon/{ip}')
		return e
	else:
		e = discord.Embed(description='<a:error:862306041546407936> –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º.')
		return e

def ctts(time):
	try:
		time = str(int(time)) + ' —Å–µ–∫—É–Ω–¥'
	except:
		pass
	if isinstance(time, str):
		time = time.replace('s', ' —Å–µ–∫—É–Ω–¥ ')
		time = time.replace('m', ' –º–∏–Ω—É—Ç ')
		time = time.replace('h', ' —á–∞—Å–æ–≤ ')
		time = time.replace('d', ' –¥–Ω–µ–π ')
		if time[-1:] == ' ':
			time = time[:-1]
	return time

def cts(s):
	UNITS = {'s':'seconds', 'm':'minutes', 'h':'hours', 'd':'days'}
	return int(datetime.timedelta(**{
		UNITS.get(m.group('unit').lower(), 'seconds'): int(m.group('val'))
		for m in re.finditer(r'(?P<val>\d+)(?P<unit>[smhd]?)', s, flags=re.I)
		}).total_seconds())
